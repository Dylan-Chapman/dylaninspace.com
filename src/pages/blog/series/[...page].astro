---
// pages/blog/series/[...page].astro

import type { Page } from "astro";
import { loadSeriesCollections } from "../../../utils/post";
import { makeSeries } from "../../../utils/series";
import config from "../../../config.mjs";
import Base from "../../../layouts/Base.astro";
import Pagination from "../../../components/general/Pagination.astro";
import Breadcrumbs from "../../../components/general/Breadcrumbs.astro";
import SeriesCard from "../../../components/general/SeriesCard.astro";
import type { SeriesList, SeriesPostEntry } from "../../../utils/types";

interface SeriesItem {
  key: string;
  list: SeriesList;
  entries: SeriesPostEntry[];
}

export async function getStaticPaths({ paginate }) {
  const { allSeriesPosts, allSeriesMeta } = await loadSeriesCollections();
  const series = makeSeries(allSeriesPosts, allSeriesMeta);

  const entryMap = new Map<string, SeriesPostEntry>();
  for (const entry of allSeriesPosts) {
    const id = entry.id.replace(/\.(md|mdx)$/i, "");
    entryMap.set(id.toLowerCase(), entry);
  }

  const items: SeriesItem[] = [];

  for (const meta of allSeriesMeta) {
    const key = meta.id.split("/")[0];
    if (!key) {
      throw new Error(`Unable to extract series key from ${meta.id}`);
    }

    const list = series.list(key);
    if (!list) continue;

    const publishedEntries = list.parts
      .filter((part) => part.published)
      .map((part) => entryMap.get(`${key}/${part.slug}`.toLowerCase()))
      .filter((entry): entry is SeriesPostEntry => Boolean(entry));

    items.push({ key, list, entries: publishedEntries });
  }

  items.sort((a, b) => a.list.title.localeCompare(b.list.title));

  return paginate(items, { pageSize: config.postsPerPage });
}

const { page } = Astro.props as { page: Page<SeriesItem> };
const breadcrumbs = [
  { label: "Home", href: "/" },
  { label: "Blog", href: "/blog/" },
  { label: "Series" },
];
---

<Base>
  <section class="container mx-auto max-w-screen-lg px-7 py-10">
    <Breadcrumbs items={breadcrumbs} class="mb-6" />
    <div class="prose lg:prose-xl prose-invert">
      <h1>Series</h1>
      <p class="text-white/70">
        Follow long-form explorations across multiple chapters. Each card below
        gathers everything published so far.
      </p>
    </div>

    <div class="mt-10 flex flex-col">
      {
        page.data.map((seriesItem) => (
          <SeriesCard series={seriesItem.list} entries={seriesItem.entries} />
        ))
      }
    </div>

    <Pagination page={page} />
  </section>
</Base>
